<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: continuous improvement | Headspring Labs]]></title>
  <link href="http://headspringlabs.com/blog/categories/continuous-improvement/atom.xml" rel="self"/>
  <link href="http://headspringlabs.com/"/>
  <updated>2013-07-23T20:56:34-05:00</updated>
  <id>http://headspringlabs.com/</id>
  <author>
    <name><![CDATA[Headspring Labs]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Failure Leads to Success]]></title>
    <link href="http://headspringlabs.com/blog/failure-leads-to-success/"/>
    <updated>2011-11-23T00:00:00-06:00</updated>
    <id>http://headspringlabs.com/blog/failure-leads-to-success</id>
    <content type="html"><![CDATA[<p>Anyone who has ever achieved success has also experienced failure. However, in the moment, we tend to see failure as a bad thing for several reasons, mostly because it is an unpleasant experience. Putting your heart and soul into reaching a goal or a desired result and falling short makes us feel inadequate. Although many may give up in the face of failure, it is those who remain persistent and determined who ultimately become successful in their mission. Throughout time, the most successful people weren’t the ones who just fell into success but those who experienced failure and worked through the mistakes and criticism to achieve success.</p>


<p>Let’s look at some examples:</p>


<ul>
<li>In 1944, young modeling hopeful Norma Jean Baker was told by the director of Blue Book Modeling Agency she should get secretarial work or get married. Norma Jean Baker later became a world-known pop cultural icon, Marilyn Monroe.</li>
<li>In 1954, an unknown performer was fired by the manager of the Grand Ole Opry who advised him to go back to driving a truck. This singer became the most popular singer in American history and left a legend as the “King of Rock and Roll,” but most know him as Elvis Presley.</li>
<li>In 1962, Decca Recording Company turned down a record deal with a band of four British musicians citing they were left unimpressed and disliked their sound. This group later became the international phenomenon known as The Beatles.</li>
</ul>


<p>&nbsp;</p>


<p>So what changed for these people? What led them from failure to success? It wasn’t luck; it was acquired knowledge. They were, at the very least, able to eliminate one course of action in order to develop a new plan.</p>


<p>The greatest opportunity success through experiencing failure offers is knowledge. Most of us probably don’t remember learning to walk, but surely our parents do, and they can vouch that we didn’t get it right the first time we tried. Did we give up and continue to crawl? No. We tried again until we got it right. But not only did we try again, we practiced walking so much we were eventually able to run. We weren’t born knowing everything, but we were born with the ability to learn and grow. So, similarly when faced with challenges in our professional and personal life, if at first you don’t succeed, try again and continue to practice your skills so they become second nature to you.</p>


<p>So, success means gaining knowledge from a good, hard failure.  Open yourself to new situations by being vulnerable and exposed to criticism. Understand what it is that holds you back from success, embrace it as motivation and envision yourself in an ideal situation. Essentially, change what failure means to you and harness it as confidence to create further success.</p>


<p><em>All you need is ignorance and confidence and the success is sure.</em>  -<a href="http://www.brainyquote.com/quotes/quotes/m/marktwain109620.html">Mark Twain</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[True Confessions, Public Shaming, and Test-Driven Development]]></title>
    <link href="http://headspringlabs.com/blog/true-confessions-public-shaming-and-test-driven-development/"/>
    <updated>2011-07-29T00:00:00-05:00</updated>
    <id>http://headspringlabs.com/blog/true-confessions-public-shaming-and-test-driven-development</id>
    <content type="html"><![CDATA[<p>Okay, I admit it. Sometimes I write unit tests second instead of first. I also bite my nails and rest my elbows on the dinner table. But when I've got a bug to fix, and I've already found the offending line, I can hardly resist the urge to just... just... <em>change</em> it. I'll follow up with unit tests afterwards, promise.</p>


<p>I admit this to you because admitting my wrongs is a step towards rehabilitation. I admit this to save you pain. Learn from my example. Test-second is so much less efficient than test-first. Consider the following workflow:</p>


<ol>
<li>Reproduce, identify, debug the issue.</li>
<li>Fix the code.</li>
<li>Compile and try it out.</li>
<li>Write a test that proves I fixed it.</li>
<li>Compile and run the test.</li>
<li>Change the code back to make sure my test really proves what it is trying to prove.</li>
<li>Compile and see the test fail.</li>
<li>Re-fix the code.</li>
<li>Compile and see the test pass.</li>
</ol>


<p>&nbsp;</p>


<p>I humble myself before you. How much time am I wasting there? It's embarrassing.</p>


<p>There's also a subtle point in step 1. What if I could use unit tests instead of the debugger to find the issue? That will be faster, too.</p>


<p>We can do better:</p>


<ol>
<li>Reproduce the issue and formulate a theory.</li>
<li>Write a test that exercises the theory.</li>
<li>Compile and see the test fail, corroborating the theory.</li>
<li>Fix the code.</li>
<li>Compile and see the test pass, validating the theory.</li>
</ol>


<p>&nbsp;</p>


<p>Perhaps you can relate. Perhaps you even bite your nails, too. I won't judge. Flog me or join me, the comments are open: Confess your bad habits (um, your <em>unit-testing</em> bad habits, please), and commit yourself to improvement. I challenge you to improve your efficiency and write your unit tests first, even—especially—for the little bug fixes.</p>

]]></content>
  </entry>
  
</feed>
