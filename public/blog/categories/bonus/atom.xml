<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bonus! | Headspring Labs]]></title>
  <link href="http://www.headspringlabs.com/blog/categories/bonus/atom.xml" rel="self"/>
  <link href="http://www.headspringlabs.com/"/>
  <updated>2013-09-06T17:43:39-05:00</updated>
  <id>http://www.headspringlabs.com/</id>
  <author>
    <name><![CDATA[Headspring Labs]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Teaching and Learning From Developers Internationally]]></title>
    <link href="http://www.headspringlabs.com/blog/teaching-and-learning-from-developers-internationally/"/>
    <updated>2012-12-21T00:00:00-06:00</updated>
    <id>http://www.headspringlabs.com/blog/teaching-and-learning-from-developers-internationally</id>
    <content type="html"><![CDATA[<p>At Headspring, we’re proud to have amazing leaders who are experts in the industry. Jimmy Bogard, our Technical Architect, not only excels at Headspring but also enthusiastically participates in the global development community. He recently went on a “world tour” to teach and meet developers in Ireland, England and Ukraine.  Jimmy had the opportunity to speak to the following groups. For more information about what information was presented at each event, <a href="http://lostechies.com/jimmybogard/2012/12/17/dublin-alt-net-skills-matter-kiev-alt-net-slides-code/" target="_blank">click here</a>.</p>


<ul>
<li><a href="http://dublinalt.net/2012/11/20/november-meetup-jimmy-bogard-on-real-world-polyglot-persistence/" target="_blank">Dublin ALT.NET</a> in <strong>Dublin, Ireland</strong></li>
<li><a href="http://skillsmatter.com/course/design-architecture/udi-dahan-nservicebus-workshop" target="_blank">Enterprise Development with NServiceBus @ SkillsMatter</a> in <strong>London, England</strong></li>
<li><a href="http://blog.kievalt.net/post/36657818028/jimmy-in-the-town" target="_blank">Kiev ALT.NET</a> in <strong>Kiev, Ukraine</strong></li>
</ul>


<p>&nbsp;</p>


<p>While the way we program is universally similar, it’s interesting to think about how similar and different developers are around the world. Here’s what Jimmy had to say about his experience:</p>


<p><em>“One of the insights I found consistent in conversations from all the developers is that it seems that no matter where I go, the problems and passions remain the same. Everyone's smart, everyone's passionate, and the things developers’ care about are similar everywhere. We read the same blogs, books, and even use the same gadgets (when we can afford them). The only global issue was whether to code in English. People don't pick English just because an American or Brit is on the team.  What if there are Ukrainians, French or Danes on the same team? The common language is English. We have a hard enough time picking a programming language, but picking a spoken language is even more interesting!”</em></p>


<p>&nbsp;</p>


<p>Want Headspring to speak at your event or come do an in-house training for your employees? <a href="http://www.headspring.com/developer-training/" target="_blank">Take a look at our website</a> for more information and contact us today!</p>


<p>&nbsp;</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Headspring is Ready to Rock!]]></title>
    <link href="http://www.headspringlabs.com/blog/headspring-is-ready-to-rock/"/>
    <updated>2012-11-09T00:00:00-06:00</updated>
    <id>http://www.headspringlabs.com/blog/headspring-is-ready-to-rock</id>
    <content type="html"><![CDATA[<p>What event sells out as fast as a Justin Beiber concert? <a href="http://codemash.org/" target="_blank">CodeMash</a>! Last year’s CodeMash conference sold out in 22 minutes. Bieber actually sold his entire North American tour in that time, but why mince words?</p>


<p>We are excited to get together with developers from across the country for <a href="http://codemash.org/" target="_blank">CodeMash 2013</a> being held January 8 – 11, 2013 in Sandusky, Ohio. The conference is filled with information about updated practices, methodologies, and technology trends in a variety of platforms and development languages. There are terrific keynote speakers, workshops, time to geek out with fellow attendees and talk “code”, and possibly take a dip in Ohio’s largest indoor waterpark.</p>


<p>Our team members Jimmy Bogard and Sharon Cichelli will be leading sessions at CodeMash.  Sharon will present “Hello, Arduino: Write Code that Interacts with the Real World” and Jimmy will be involved in the PreCompiler workshop.</p>


<p style="text-align: center;"><a href="http://www.headspring.com/wp-content/uploads/2012/11/img_1647.jpg"><img class="aligncenter size-medium wp-image-5847" title="img_1647" src="http://www.headspring.com/wp-content/uploads/2012/11/img_1647-229x300.jpg" alt="" width="229" height="300" /></a></p>


<p>Jimmy is also on his own world tour. He is speaking at various international locations over the next three months beginning on December 4, 2012 in London, England where he’ll talk about “Real World Polyglot Persistence”.  Check out other scheduled events below:</p>


<ul>
<li><a href="http://warmcrocconf.net/" target="_blank">Warm Crocodile Developer Conference</a>, January 16-17, 2013 in Copenhagen, Denmark</li>
<li><a href="http://confoo.ca/en" target="_blank">ConFoo Conference</a>, February 25-March 1, 2013 in Montreal, Canada.</li>
</ul>


<p>&nbsp;</p>


<p>Attending any of these conferences? We look forward to meeting you!</p>


<p>Have an event where you’d like us to present? Let’s talk!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Becoming a Headspringer: My First Week]]></title>
    <link href="http://www.headspringlabs.com/blog/becoming-a-headspringer-my-first-week/"/>
    <updated>2012-04-27T00:00:00-05:00</updated>
    <id>http://www.headspringlabs.com/blog/becoming-a-headspringer-my-first-week</id>
    <content type="html"><![CDATA[<h2 dir="ltr">Welcome Number 7941</h2>


<p>I'd like for you to take a moment and imagine that today is your first day at a new company.  You enter the building wearing the carefully selected slacks and shirt ironed the night before.  You're filled with nervous energy, but confident, because out of the fifty plus candidates, who did they select to write their new custom software solution?  That's right, you.</p>


<p>The friendly HR rep that recruited you shakes your hand and leads you to a large conference room where you attend a new hire orientation.  You're promptly handed an employee handbook the size of a telephone book and sit down.  Opening to a random page on Computer/IT Usage policies you learn that it's against company policies to look at **cough** questionable **cough** images on company computers.  Interesting, you think to yourself, I figured that was common knowledge.</p>


<p>Over the next four hours you listen to HR representatives speak about company history, company policies, and benefits.  You fill out form after form of information asking for social security numbers, driver's license number, passport number and other private information.  You're handed a badge with an employee number, 7941.</p>


<p style="text-align: center;"><a href="http://www.headspring.com/2012/04/becoming-a-headspringer-my-first-week/cubicle-hell" rel="attachment wp-att-4917"><img class="size-full wp-image-4917 aligncenter" title="Sea of Cubicles" src="http://www.headspring.com/wp-content/uploads/2012/04/cubicle-hell.jpg" alt="Sea of Cubicles" width="650" height="297" /></a></p>


<p>Next they take you on a tour of the office.  On the first floor is sales, marketing and HR.  On the second floor is Engineering.  At this point you've been blasted with so much canned information that mentally you only take note of the bathroom locations.</p>


<p>The elevator door opens on the third floor and your tour guide herds your group through the sea of Customer Service cubicles until you reach the IT department and HR hands you off to your new tour guide, your manager.  He or she introduces you to the entire team and leaves you in your cubicle.  Sitting down, you realize you don't have a computer at your desk.  You think to yourself, what does a software developer do without a computer?</p>


<p>How many of you have a page, just like this, written in your life story?  How many of you have felt like a number, like you weren't valued?  At Headspring, there’s a better way...</p>


<h2 dir="ltr">The Four Core Values</h2>


<p>Let me start off by saying, at Headspring, things are different.  You quickly learn the following four core values are deeply held at the core of a Headspringer.</p>


<p>- Drive for Excellence<br />
- People are Valued<br />
- Honest Communication<br />
- Passion for Learning and Growth</p>


<p>Within the first week, time and time again I witnessed Headspringers demonstrating these four values in every interaction.  Let me take a few moments to detail just a few of them.<br />
A week before my start date I received a delivery of piping hot, freshly baked cookies from the founder and CEO, Dustin Wells.  Now I'm definitely not known to have a sweet tooth, but the cookies were just plain awesome; and seriously, how cool is that to have the owner of the company value me as a new hire?</p>


<p>Three business days before my start date, I received an email from the director of software development, Glenn Burnside.  I was the proud owner of a shiny new Headspring Google account.  Being a naturally curious person, I logged in to find ten or more introduction emails to various systems such as the Intranet, BitBucket repositories, and Agile Zen Projects.  Wow, I haven't started yet and I'm already trusted with sensitive information such as the admin credentials to the production server.  This level of transparent communication across an organization was and still is amazing to me.</p>


<p><a href="http://www.headspring.com/2012/04/becoming-a-headspringer-my-first-week/headstream094" rel="attachment wp-att-4918"><img class="aligncenter size-full wp-image-4918" title="Headspring Offices" src="http://www.headspring.com/wp-content/uploads/2012/04/headstream094.jpg" alt="" width="650" height="289" /></a></p>


<p>On my first day at the Headspring office I arrived to find my desk already outfitted with business cards, moleskine journals, a Headspring shirt, and most importantly a fully configured laptop with two 24" monitors.  When I say fully configured, I don't mean it has RAM, a working Hard Drive and is plugged in.  I mean that it's fully configured with almost every software development tool that I use, from TestDriven.Net to Notepad++ to Redgate SQL Toolbelt.  I only downloaded and installed the obscure tools that I use such as Beyond Compare, Wunderlist, gVim, and Cygwin.  By the end of the day, with guidance from teammates, I was up and running, tackling tasks in the backlog.</p>


<p>Four days into the new job and I had my first one-on-one meeting with Glenn.  Here we talked candidly about expectations and goals.  The conversation drifted towards the on ramp process and during that discussion he asked for my opinion and took a suggestion I had on the process.<br />
That's when it hit me.  The four core values are a deep commitment at Headspring starting from the top leadership all the way down.  Glenn had taken something so simple like the on ramp process of a new employee and the drive for excellence had motivated everyone to thoughtfully deconstruct and improve the process.  This is what it means to be a Headspringer.</p>


<p>Working at Headspring has already been an amazing experience.  It's a pleasure to work with individuals who have a deep passion and commitment to developing not only software, but each other.  So I feel compelled to ask you this question.  What's keeping you from <a href="http://www.headspring.com/about-us/careers">applying</a>?</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Overcoming Perfectionism]]></title>
    <link href="http://www.headspringlabs.com/blog/overcoming-perfectionism/"/>
    <updated>2012-04-16T00:00:00-05:00</updated>
    <id>http://www.headspringlabs.com/blog/overcoming-perfectionism</id>
    <content type="html"><![CDATA[<h2></h2>


<blockquote><p><em>Perfectionist (my rough definition):  Someone who wants to always do things without errors or mistakes, without considering the costs incurred or likelihood of attainment.</em></p></blockquote>


<h2>Summary</h2>


<p>In this article I share my personal struggles with unproductive perfectionism in my work.  I point out how much “true perfection” really costs, and that it often isn’t even possible.  I discuss why overcoming perfectionism is important, and share some strategies I’ve found useful for balancing passion and perfectionism.</p>


<h2>Introduction</h2>


<p>Hi, my name is Nolan and I’m a recovering perfectionist.  I love software development and I’m very passionate about what I do.  The problem is, sometimes I care too much and passion turns into perfectionism.</p>


<p>I started thinking about this after my first post.  I was checking it to see if there were any comments I needed to respond to.  I’d written the article over a week before it was published, so I casually glanced over it.  While reading I suddenly realized I’d completely left a word out of a sentence.  I was mortified.  I’d proofread it at least three times and had gotten someone else to look over it.  How could this have happened?  My first blog post and I’d failed to do it “right”.</p>


<p>It wasn’t a big error.  <em>Fun contest: I’ll send some Headspring swag to the first commenter that finds the word omission in </em><a href="http://www.headspring.com/2012/03/making-conditional-validation-logic-readable" target="_blank"><em>that post</em></a>.  But it felt big, and I felt it reflected badly on me.  “How can I write posts that help others when I communicate so poorly?” I wondered.</p>


<p>Last night I got an email from an old colleague that I haven’t talked with for almost two years.  He wrote “…I saw your post.  Really enjoyed reading it.  Nice job!”</p>


<p>Isn’t this ironic?  Here I was despondent about my ability to write in an understandable fashion, when in reality people are finding the article useful despite the error.  It was so encouraging to get that email.</p>


<h2>Self Reflection</h2>


<p>I’ve spent some time looking back over my career, and I can see some examples of times when I’ve let perfectionism run a little too wild:</p>


<ul>
<li>Striving for very high code coverage with automated tests, regardless of the cost of writing and maintaining those tests compared to the risks of the covered code becoming broken.</li>
<li>Defensive coding to a superfluous level.  For example, having a public class method perform input validation before calling a private method, and then having the private method perform the same validation.</li>
<li>Crafting a long email with all the relevant details and background when it would have been quicker to just go talk to the individual in person.</li>
</ul>


<p>&nbsp;</p>


<p>Take a few minutes and reflect back on your life about something you are passionate about – software, cooking, or perhaps golf.  Try to look in a detached, unemotional manner – do you ever strive for an unreasonably high standard?</p>


<h2>Is Perfection Even Possible?</h2>


<p>If there’s any organization that has to “get it right”, it’s the National Aeronautics and Space Administration (NASA).  They design space vehicles controlled by software responsible for safely flying humans into and back from space.  Vehicle failure doesn’t mean walking home, it means not coming home.  While NASA has had fatal accidents, <a href="http://www.nasa.gov/mission_pages/shuttle/flyout/flyfeature_shuttlecomputers.html" target="_blank">none of them were caused by software.</a></p>


<p>So how did NASA ensure that a system where each software change that goes through 15 months of testing is perfect?  They assumed it might not be perfect and paid a different company to create a <a href="http://spaceflight.nasa.gov/shuttle/reference/shutref/orbiter/avionics/dps/bfs.html" target="_blank">backup flight control</a> with a completely different implementation.</p>


<h2>Why Overcoming Perfectionism Is Important</h2>


<p>There are at least two reasons why it’s important to overcome perfectionist tendencies:  cost, and your personal well-being.</p>


<p>“More perfect” means more costly with no substantial benefit.  You wouldn’t buy a $500 toothpick because it was made from teak wood and hand carved and sanded into the perfect shape, would you?  Likewise you need to be aware of the cost of what you’re doing for your company or client and if they’re getting value out of the effort your expending.</p>


<p>Secondly, perfectionism is dangerous to your mental health.  It's good to care, but it's bad to care so much you feel inadequate.  Overcoming perfectionism doesn't mean you stop caring, it means adjusting to a healthier perspective.  The danger in not overcoming the agony of not reaching perfection is slipping into cynicism about the glass "always being half empty" and a general sense of depression about not reaching your goals.</p>


<h2>Strategies For Overcoming Perfectionism</h2>


<p>These are a few strategies I’ve found helpful in dealing with perfectionist tendencies. If you have some others, please add a comment to share it.</p>


<p>Seek a crystal clear understanding of the context for the work you’re doing.  How will this be used, and how much "quality" do we need?  Test cases help.  Recognize that dealing with edge cases can add significant work, figure out the cost and make sure it's worth the effort.</p>


<p>If at all possible, don’t work alone.  Use others as a sounding board to make sure you haven’t gone overboard in a design or implementation.  You’ll get positive feedback from someone else, and seeing others struggle at times and assisting them helps you realize we’re all human and keeps you from expecting too much from yourself.</p>


<p>Don’t try to plan everything up front.  Have a rough idea of what you need and start top down and adjust as needed.  If you try to plan every last detail before you start, you’ll never start.</p>


<p>When you make a mistake, don’t dwell on it.  Give yourself credit for how hard and demanding software development really is.  Natural language can be understood even when misteaks are maid, but in programs ONE LITTLE CHARACTER makes something right or wrong.</p>


<p>Celebrate your accomplishments! It’s important to analyze your mistakes and learn from them, but it’s just as important to reflect and revel in your successes.</p>


<h2>Wrap Up</h2>


<p>Randy Pausch was a computer science professor at Carnegie Mellon University.  When he found out he had terminal cancer, he gave an incredibly uplifting speech reflecting on what’s really important in life.  The speech was expanded into a book titled “The Last Lecture”.  One observation Randy made that really grabbed my attention was this:  <strong>“Engineering isn't about perfect solutions; it's about doing the best you can with limited resources”</strong>.  Randy faced the ultimate "it can't be perfect" scenario by not being able to live the average lifespan most of us assume we'll get.  He courageously dealt with it the best he could, and is an inspiration to the rest of us.</p>


<p>Your work doesn’t have to be perfect – rarely CAN it be perfect, and recognizing this doesn’t mean giving up on your passion for doing things well.  Getting over perfectionism enables you to do more things and be a happier person.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Metrics, reports, KPIs, and the stuff developers must provide to executives]]></title>
    <link href="http://www.headspringlabs.com/blog/metrics-reports-kpis-and-the-stuff-developers-must-provide-to-executives/"/>
    <updated>2012-04-12T00:00:00-05:00</updated>
    <id>http://www.headspringlabs.com/blog/metrics-reports-kpis-and-the-stuff-developers-must-provide-to-executives</id>
    <content type="html"><![CDATA[<p>In September of 2007, I joined <a href="http://www.headspring.com/">Headspring</a> as the CTO.  Now I serve as President and Chief Operating Officer.  When I joined, there were 4 other employees including the original founder serving as CEO.  He founded the company in 2001.  It has always been professional services, but the strategy has changed a few times over the years.  I started my career as a developer in the mid nineties, and now I’m an executive with lots of great developers that I support.  Like most, our company runs on metrics.  As a manager, I understand their worth.  Earlier in my career, I had no idea.</p>


<p>Every day, I glance at our <strong>operational dashboard</strong>.  While I won’t share full screen-shots yet, I want to share some of the graphs I use every day to ensure the company is doing well.  Consider this graph.</p>


<p><a href="http://www.headspring.com/wp-content/uploads/2012/04/CropperCapture22.png"><img style="padding-left: 0px; padding-right: 0px; padding-top: 0px; border: 0px;" src="http://www.headspring.com/wp-content/uploads/2012/04/CropperCapture22_thumb.png" alt="Time allocation BI chart" width="540" height="294" border="0" /></a></p>


<p>&nbsp;</p>


<p><strong>“BD” stands for “big dial”.</strong>  We have 3 big dials we glance at every day.  If we don’t like what we see, we have some “smaller dials” we can look at.  We use the analogy of a plane cockpit. There are a few things pilots always glance at, and then there are smaller, more detailed ones that are consulted as the need arises.</p>


<p>This graph shows us our utilization breakdown in the categories that are relevant.  Here are the categories:</p>


<ul>
<li><strong>Personal Time</strong>: holidays, vacations, dentist appts, etc.</li>
<li><strong>Assigned Time</strong>: Department meetings, 1x1’s, stand-up meetings, etc</li>
<li><strong>Bench Time</strong>: Time without available project work (doesn’t show because it’s zero)</li>
<li><strong>Other Time</strong>: Unplanned unproductive time, such as having a flat tire on the way to work</li>
<li><strong>Sales Time</strong>: Mostly used by the sales department: work to acquire a client</li>
<li><strong>Billed Time</strong>: self-explanatory</li>
<li><strong>Unbilled Time</strong>: Working for a client, but not charging</li>
<li><strong>CI Time</strong>: Continuous Improvement time:  We expect that our people are working to improve.</li>
<li><strong>Client Time:</strong>  sum of billed and unbilled time.</li>
</ul>


<p>You will notice the big dip during the week of 4/7.  We had our Q1 <strong>quarterly off-site</strong> during that week.  We spent 12% of that week to use as a fun off-site where the entire company toured Inner Space Cavern hundreds of feet under Georgetown.  It shows up on the dashboard because it affects the performance of the company.  As an executive team, we decided it was a good investment in the future productivity of our staff.</p>


<p>You might have also noticed that 4/7 was a Thursday in 2011.  How can it be the week of 4/7?  We use the concept of <strong>“moving weeks”</strong> instead of calendar weeks.  We used to use calendar weeks, but the last data point of the graph was always skewed because it didn’t represent a full data point until people logged their time for Friday.  By taking data from a moving week, when I look at the data on Thursday, it pulls data from the previous Thursday through this Wednesday (yesterday).  That way, every point on the graph represents exactly the same size of a data point.  We do the same for months, quarters and years.</p>


<p><strong>There is a big problem with pull metrics by calendar month (for 2011)</strong>:</p>


<ul>
<li>January has <strong>21</strong> business days</li>
<li>February has <strong>20</strong> business days</li>
<li>March has <strong>23</strong> business days</li>
<li>April has <strong>21</strong> business days</li>
<li>May has <strong>22</strong> business days</li>
</ul>


<p>You can see how using calendar months can <strong>wreak havoc</strong> on the comparability of month metrics.  We expect larger months to pose better numbers than the smaller months.  On the financial side, we have to accrue the payroll appropriately as well in order to keep net income from becoming skewed.</p>


<p>To deal with this, we use the concept of a <strong>moving month</strong>.  There are 13 moving months in a year.  Each moving month is a 28-day time period from yesterday to 28 days before yesterday.  In this way, every data point will be exactly the same size as the other.  There are also 4, 13-week moving quarters in a year.  The following graph is our 2nd big dial shown by moving month.</p>


<p><img src="http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/d066af3fb6f3_8D6C/CropperCapture%5B28%5D_thumb_1.png" alt="CropperCapture[28]" /></p>


<p>Before moving to moving months, the calendar month line was consistently <strong>misrepresented</strong> by the larger months.  Where the line moves, we need to know why.  We made the switch so that every curve of the line was meaningful.  We didn’t want our data communicating falsehoods or April-fools jokes.  You think I’m kidding, but April always looks bad coming straight out of March, which boasts 2 more full business days.  In professional services, a business day accounts for a <strong>significant amount of revenue</strong>.</p>


<p>Using Big Dial 1 and Big Dial 2, we can keep the ship on the right course.  As long as our staff is billing a consistently high percentage: we shoot for 78-79%, and our hourly margins are high enough to account for our unbillable staff (sales, marketing, corporate) and our fixed costs (facilities, supplies, etc.), our company will remain healthy.</p>


<p><strong>These dials are tactical, not strategic</strong>.  The next dial is strategic.</p>


<p><img src="http://jeffreypalermo.com/files/media/image/Windows-Live-Writer/d066af3fb6f3_8D6C/CropperCapture%5B31%5D_thumb.png" alt="CropperCapture[31]" /></p>


<p>This gives us a view into the <strong>structure</strong> of our company.  <strong>We have hired at least 7 new employees since November, 2011</strong>.  With that, it’s important to keep tabs on how we are changing the structure of our company.  When we hired <a href="http://lostechies.com/chrismissal/">Chris Missal</a> for the operations department, we expanded billable staff.  When we hired <a href="http://www.headspring.com/author/mchauvin">Mary Chauvin</a> for marketing, we increased non-billable staff.  Keeping the right balance is important.</p>


<p>You can see that our % of Operations staff to the rest has dipped a little bit over the last 7 months.  We have done that while growing, and we are re-leveling the organization now.  To level out the organization, we need to <strong>add about five more people</strong> to the Operations department.  This graph, while very high level, gives critical insight into how the other two graphs affect our income statement.</p>


<p>Using these three charts together, I have a very good sense of what I need to do to improve the financial performance of the company.  Right now:</p>


<ol>
<li>I need to hire 5 more great .Net developers</li>
<li>I need to keep Client Time at the level of Operations % plus Contractor % (since both types bill)</li>
</ol>


<p>I hope that this helps some developers understand how different types of reports can give answers and perspective to managers.  If a picture is worth a thousand words, shouldn’t more of our reports be pictures?</p>

]]></content>
  </entry>
  
</feed>
